{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Test internal services","text":"<p>\u0421V Builder - for creating CVs in corporate style</p> <p>Vacation Manager - for creating applications for vacations, time off and relocation</p> <p>Time Tracker - for tracking working hours and tasks</p>"},{"location":"#code-annotation-examples","title":"Code Annotation Examples","text":""},{"location":"#codeblocks","title":"Codeblocks","text":"<p>Some <code>code</code> goes here.</p>"},{"location":"#plain-codeblock","title":"Plain codeblock","text":"<p>A plain codeblock:</p> <pre><code>Some code here\ndef myfunction()\n// some comment\n</code></pre>"},{"location":"#code-for-a-specific-language","title":"Code for a specific language","text":"<p>Some more code with the <code>py</code> at the start:</p> <pre><code>import tensorflow as tf\ndef whatever()\n</code></pre>"},{"location":"#with-a-title","title":"With a title","text":"bubble_sort.py<pre><code>def bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n</code></pre>"},{"location":"#with-line-numbers","title":"With line numbers","text":"<pre><code>def bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n</code></pre>"},{"location":"#highlighting-lines","title":"Highlighting lines","text":"<pre><code>def bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n</code></pre>"},{"location":"cv_builder/","title":"CV Builder","text":"<p>For creating CVs in corporate style</p>"},{"location":"cv_builder/#description","title":"Description","text":"<p>Frontend, backend, and database for production and development are deployed on a virtual machine on GCP</p>"},{"location":"cv_builder/#infrastructure","title":"Infrastructure","text":"<p>Directory Files:</p> <ul> <li><code>agreement.txt</code>: This file records the decision on whether to move the new build to replace the current one or not (to verify if the build is executed correctly and will work).</li> <li><code>archive-builds-from-pipeline-noreleased/</code>: Folder containing unreleased builds (those that run if the variable is set to \u201cno\u201d).</li> <li><code>new-build-from-pipeline/</code>: Folder where the freshly built pipeline build is moved. Depending on the agreement, the files in this directory will either be moved to noreleased or replace the current frontend in <code>/var/www/cv-builder-resume</code>.</li> <li><code>release.sh</code>: The script that performs the actions.</li> <li><code>resume-old-builds/</code>: Folder where former current releases are sent.</li> </ul>"},{"location":"cv_builder/#frontend","title":"Frontend","text":""},{"location":"cv_builder/#backend","title":"Backend","text":""},{"location":"cv_builder/#database","title":"Database","text":""},{"location":"cv_builder/#solution","title":"Solution","text":"How the Frontend Pipeline Launch Works... <p>The pipeline launch is implemented with manual approval following best practices. A variable  named prod_agreement is introduced. By default, it is set to \u201cno\u201d. \u201cNo\u201d means that the new  build will not be moved to the folder with the currently running build. First, run with \u201cno\u201d  to ensure everything goes smoothly and the pipeline doesn\u2019t break (the code is correct).  After that, manually run the pipeline with the variable set to \u201cyes\u201d so that the newly  created build becomes the current one.</p>"},{"location":"cv_builder/#helpful-tips","title":"Helpful tips","text":"If the password for the mailing mailbox changes... <p>If the password for the mailing mailbox changes, you need to update the EMAIL_PASS  variable located in the .env file on the server. Additionally, on the dev server, this file  contains the LM_EMAIL, TM_EMAIL, and PM_EMAIL variables, which specify the email addresses to which mailings from the dev server will be sent.</p>"},{"location":"statics/","title":"Statics","text":""},{"location":"statics/#deployment","title":"Deployment","text":"<p>Deployment is performed through the execution of pipelines. The pipeline:</p> <ul> <li>Performs a git pull of the branch on the server, thus updating the code on the server.</li> <li>Builds a Docker image based on the Dockerfile-dev file located in the repository.</li> <li>Tags the image with a version corresponding to the pipeline build number.</li> <li>Passes the version variable to the docker-compose file.</li> <li>The old container is NOT removed (cleanup needs to be added), and a new one is created from the new Docker image.</li> </ul>"},{"location":"statics/#diagrams","title":"Diagrams","text":"<pre><code>flowchart TD\n    A[\"dev-statics.softteco.tools | 165.22.194.166\"]&lt;---&gt;C\n    B[\"test-statics.softteco.tools | 206.189.63.133\"]&lt;---&gt;C\n    C[\"statics_frontend | node:18.12.1 ---&gt; NGINX:1.17-1-alpine | routing logic\"]---&gt;D\n    D[\"statics_backend | Maven:3.8-openjdk-11 ---&gt; tomcat:9-jdk11-temurin-focal\"]\n    DB1[statics-redis \n    redis:latest]\n    DB2[statics-postgres\n    postgres:15.2\n    ]\n    D &lt;---&gt; DB1\n    D &lt;---&gt; DB2</code></pre> <p>more text</p>"},{"location":"test/","title":"Test","text":"<p>For creating CVs in corporate style</p>"},{"location":"test/#test_1","title":"Test","text":"<p>Test</p>"},{"location":"time_tracker/","title":"Time Tracker","text":"<p>For tracking working hours and tasks</p>"},{"location":"time_tracker/#description","title":"Description","text":"<p>This project only includes the front-end part. It is deployed on Google Cloud Platform (GCP) using Cloud Storage and Cloud Load Balancer.</p> <p>https://dev-timetracker.softteco.tools</p> <p>https://timetracker.softteco.tools</p>"},{"location":"vacation_manager/","title":"Vacation Manager","text":"<p>For creating applications for vacations, time off and relocation</p>"},{"location":"vacation_manager/#description","title":"Description","text":"<p>Front and back for production and development are deployed on a virtual machine on GCP</p>"},{"location":"vacation_manager/#infrastructure","title":"Infrastructure","text":"<p>Database - GCP Cloud SQL \"postgresSQL\"</p> <p>The infrastructure of the service is implemented using Docker. The <code>docker-compose.yml</code> file is located on the server outside the front and back directories, where it is used to launch the service. - qa_backend - the main volume from the qa_backend folder and the <code>/home/jenkins/resources/vocation-manager.p12</code> file - qa_frontend - the main volume from the qa_frontend/build folder - database - with settings - Ngxinx_proxy_manager(app) - (ports 80, 81, 443) nginx that proxies requests to the front/back</p>"},{"location":"vacation_manager/#solution","title":"Solution","text":"<p>A script has been implemented to retain the last (n=5) versions of old build JAR files. When the 6th build is created, the script removes the oldest version (1st in sequence), moves the current build to the folder with old versions, and sets the newly built one as the current build. The script is located at <code>/home/jenkins/script.sh</code> The folder containing the old versions is at <code>/home/jenkins/old_qa_backend_builds</code>.</p>"},{"location":"workspace/","title":"Workspace","text":""},{"location":"workspace/#description","title":"Description","text":"<p>The backend is deployed in Docker along with the database, while the frontend is hosted using GCP Cloud Storage and a load balancer. Additionally, NGINX is set up locally on servers to act as a proxy server.</p>"},{"location":"workspace/#another-heading","title":"Another heading","text":"<p>more text</p>"},{"location":"workspace/#helpful-tips","title":"Helpful tips","text":"If it is necessary to increase the size of the uploaded file... <p>To increase the size of the uploaded file, you need to configure the NGINX configuration file  hat is installed locally (not in a container!) on the server. The configuration involves adding  the <code>client_max_body_size</code> parameter. Additionally, developers should change the file size check  settings on the frontend.</p>"}]}